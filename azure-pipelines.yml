trigger:
- main

pool:
  name: 'Default'  
  demands:
  - agent.name -equals DESKTOP-7HI2KQN

variables:
- group: EmailCredentials  # Link the variable group

steps:
- script: |
    python --version
  displayName: 'Set Up and Verify Local Python'

- script: |
    python main.py
  displayName: 'Run Python Script'

- script: |
    mkdir C:\IT
    copy output.txt C:\IT\
  displayName: 'Copy Artifacts to C:\\IT'

- task: PowerShell@2
  displayName: 'Create Version Stamp'
  inputs:
    targetType: inline
    script: |
      $versionStampFile = "C:\IT\txt.VersionStamp"
      $currentVersion = "1.0.0"
      $newVersion = $currentVersion -replace '\d+$', { [int]$_ + 1 }
      Set-Content -Path $versionStampFile -Value $newVersion
      Write-Host "Version stamp updated to: $newVersion"
      Write-Host "##vso[task.setvariable variable=versionNumber]$newVersion"

- task: PowerShell@2
  displayName: 'Send Email Notification (Optional)'
  inputs:
    targetType: inline
    script: |
      $to = "sam.albershtein@gmail.com"
      $from = "$(EmailUsername)"  # Using the secure variable
      $subject = "Pipeline Run Status"
      $body = "Pipeline ran successfully. New version: $(versionNumber)"
      $smtpServer = "smtp.gmail.com"
      $smtpPort = 587
      $username = "$(EmailUsername)"  # Using the secure variable
      $password = "$(EmailPassword)"  # Using the secure variable
      $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
      $credential = New-Object System.Management.Automation.PSCredential($username, $securePassword)

      Send-MailMessage -To $to -From $from -Subject $subject -Body $body -SmtpServer $smtpServer -Port $smtpPort -UseSsl -Credential $credential
  condition: succeeded()
